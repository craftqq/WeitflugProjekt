#BlueJ class context
comment0.params=
comment0.target=Linie()
comment0.text=\r\n\ Konstruktor\ fuer\ Hauptfenster\r\n
comment1.params=x1\ y1\ x2\ y2
comment1.target=Linie(int,\ int,\ int,\ int)
comment1.text=\r\n\ Konstruktor\ fuer\ Hauptfenster\r\n\ \r\n\ @param\ x1\r\n\ @param\ y1\r\n\ @param\ x2\r\n\ @param\ y2\r\n
comment10.params=neueDicke
comment10.target=void\ setzeLinienDicke(int)
comment10.text=\r\n\ Liniendicke\ setzen\r\n\ \r\n\ @param\ neueDicke\r\n
comment11.params=
comment11.target=void\ entfernen()
comment11.text=\r\n\ Entfernen\ des\ Graphikobjekts\r\n
comment12.params=
comment12.target=void\ finalize()
comment12.text=\r\n\ Destruktor\r\n
comment2.params=behaelter
comment2.target=Linie(IContainer)
comment2.text=\r\n\ Konstruktor\r\n\ \r\n\ @param\ behaelter\r\n
comment3.params=behaelter\ x1\ y1\ x2\ y2
comment3.target=Linie(IContainer,\ int,\ int,\ int,\ int)
comment3.text=\r\n\ allgemeiner\ Konstruktor\r\n\ \r\n\ @param\ behaelter\r\n\ @param\ x2\r\n\ @param\ y2\r\n
comment4.params=
comment4.target=BasisComponente\ getBasisComponente()
comment4.text=\r\n\ Das\ Interface\ IComponente\ fordert\ eine\ Methode\ die\ eine\ BasisComponente\r\n\ zurueckliefert.\ Sie\ wird\ benoetigt,\ um\ ein\ Objekt\ zu\ einem\ anderen\r\n\ Behaelter\ hinzuzufuegen\r\n
comment5.params=
comment5.target=void\ sichtbarMachen()
comment6.params=
comment6.target=void\ unsichtbarMachen()
comment6.text=\r\n\ Mache\ unsichtbar.\ Wenn\ es\ bereits\ unsichtbar\ ist,\ tue\ nichts.\r\n
comment7.params=neuesX1\ neuesY1\ neuesX2\ neuesY2
comment7.target=void\ setzeEndpunkte(int,\ int,\ int,\ int)
comment7.text=\r\n\ \r\n\ @param\ neuesX1\r\n\ @param\ neuesY1\r\n\ @param\ neuesX2\r\n\ @param\ neuesY2\r\n
comment8.params=dx\ dy
comment8.target=void\ verschieben(int,\ int)
comment9.params=neueFarbe
comment9.target=void\ setzeFarbe(java.lang.String)
comment9.text=\r\n\ gueltige\ Farben\:\ "rot",\ "gelb",\ "blau",\ "gruen",\ "lila"\ ,\ "schwarz"\ ,\r\n\ "weiss"\ ,\ "grau","pink","magenta","orange","cyan","hellgrau"\r\n
numComments=13
